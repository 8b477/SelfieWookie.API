// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SelfieWookie.Core.Infrastructure.DB;

#nullable disable

namespace SelfieWookie.Core.Infrastructure.Migrations
{
    [DbContext(typeof(SelfieContext))]
    [Migration("20230314101623_AddDescription")]
    partial class AddDescription
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SelfieWookie.Core.Domain.Picture", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Pictures");
                });

            modelBuilder.Entity("SelfieWookie.Core.Domain.Selfie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PictureID")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Titleescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("WookieID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PictureID");

                    b.HasIndex("WookieID");

                    b.ToTable("Selfie", (string)null);
                });

            modelBuilder.Entity("SelfieWookie.Core.Domain.Wookie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Wookie", (string)null);
                });

            modelBuilder.Entity("SelfieWookie.Core.Domain.Selfie", b =>
                {
                    b.HasOne("SelfieWookie.Core.Domain.Picture", "Picture")
                        .WithMany("Selfies")
                        .HasForeignKey("PictureID");

                    b.HasOne("SelfieWookie.Core.Domain.Wookie", "Wookie")
                        .WithMany("Selfies")
                        .HasForeignKey("WookieID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Picture");

                    b.Navigation("Wookie");
                });

            modelBuilder.Entity("SelfieWookie.Core.Domain.Picture", b =>
                {
                    b.Navigation("Selfies");
                });

            modelBuilder.Entity("SelfieWookie.Core.Domain.Wookie", b =>
                {
                    b.Navigation("Selfies");
                });
#pragma warning restore 612, 618
        }
    }
}
